@import url('https://fonts.googleapis.com/css2?family=Bonbon&family=Emilys+Candy&display=swap');

body, header, main, footer {
    width: 100% !important;
    overflow-x: hidden !important;
    font-family: 'Emilys Candy';
}

.logo {
  max-height: 32px;
}

.navcol {
    background-color: rgb(245, 93, 253);
    color: rgb(65, 7, 82);
}

#formulario {
    background-image: url(https://cdn.pixabay.com/photo/2018/06/29/08/15/doodle-3505459__340.png);
    background-repeat: repeat;
    padding: 10% 5%;
    color: rgb(84, 34, 1);
}

#forms {
    background-color: rgba(255, 201, 229, 0.8);
    padding: 2% 0%;
}

.form-control.is-valid, .was-validated .form-control:valid {
  border-color: var(--bs-success) !important;
  padding-right: calc(1.5em + 0.75rem);
  background-image: url(data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23198754' d='M2.3 6.73.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e);
  background-repeat: no-repeat;
  background-position: right calc(0.375em + 0.1875rem) center;
  background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
}

.form-control.is-invalid, .was-validated .form-control:invalid {
  border-color: var(--bs-danger) !important;
  padding-right: calc(1.5em + 0.75rem);
  background-image: url(data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e);
  background-repeat: no-repeat;
  background-position: right calc(0.375em + 0.1875rem) center;
  background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
}

.valid-feedback {
  width: 100%;
  margin-top: .25rem;
  font-size: .875em !important;
  color: #198754 !important;
}

.invalid-feedback {
  width: 100%;
  margin-top: .25rem;
  font-size: .875em !important;
  color: #dc3545 !important;
}

.hidden {
  display: none !important;
}

.boton {
  --bs-btn-bg: rgb(65, 7, 82) !important;
  --bs-btn-border-color: rgb(39, 5, 49) !important;
  --bs-btn-hover-bg: rgb(245, 93, 253) !important;
  --bs-btn-hover-border-color: rgb(167, 67, 172) !important;
  --bs-btn-active-bg: rgb(65, 7, 82) !important;
  --bs-btn-active-border-color: rgb(39, 5, 49) !important;
  --bs-btn-disabled-bg: rgb(245, 93, 253) !important;
  --bs-btn-disabled-border-color: rgb(167, 67, 172) !important;

}

// Custom.scss
// Option A: Include all of Bootstrap

// Include any default variable overrides here (though functions won't be available)

// Then add additional custom code here

@mixin form-validation-state-selector($state) {
    @if ($state == "valid" or $state == "invalid") {
      .was-validated #{if(&, "&", "")}:#{$state},
      #{if(&, "&", "")}.is-#{$state} {
        @content;
      }
    } @else {
      #{if(&, "&", "")}.is-#{$state} {
        @content;
      }
    }
  }
  
  @mixin form-validation-state(
    $state,
    $color,
    $icon,
    $tooltip-color: color-contrast($color),
    $tooltip-bg-color: rgba($color, $form-feedback-tooltip-opacity),
    $focus-box-shadow: 0 0 $input-btn-focus-blur $input-focus-width rgba($color, $input-btn-focus-color-opacity)
  ) {
    .#{$state}-feedback {
      display: none;
      width: 100%;
      margin-top: $form-feedback-margin-top;
      @include font-size($form-feedback-font-size);
      font-style: $form-feedback-font-style;
      color: $color;
    }
  
    .#{$state}-tooltip {
      position: absolute;
      top: 100%;
      z-index: 5;
      display: none;
      max-width: 100%; // Contain to parent when possible
      padding: $form-feedback-tooltip-padding-y $form-feedback-tooltip-padding-x;
      margin-top: .1rem;
      @include font-size($form-feedback-tooltip-font-size);
      line-height: $form-feedback-tooltip-line-height;
      color: $tooltip-color;
      background-color: $tooltip-bg-color;
      @include border-radius($form-feedback-tooltip-border-radius);
    }
  
    @include form-validation-state-selector($state) {
      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;
      }
    }
  
    .form-control {
      @include form-validation-state-selector($state) {
        border-color: $color;
  
        @if $enable-validation-icons {
          padding-right: $input-height-inner;
          background-image: escape-svg($icon);
          background-repeat: no-repeat;
          background-position: right $input-height-inner-quarter center;
          background-size: $input-height-inner-half $input-height-inner-half;
        }
  
        &:focus {
          border-color: $color;
          box-shadow: $focus-box-shadow;
        }
      }
    }
  
    // stylelint-disable-next-line selector-no-qualifying-type
    textarea.form-control {
      @include form-validation-state-selector($state) {
        @if $enable-validation-icons {
          padding-right: $input-height-inner;
          background-position: top $input-height-inner-quarter right $input-height-inner-quarter;
        }
      }
    }
  
    .form-select {
      @include form-validation-state-selector($state) {
        border-color: $color;
  
        @if $enable-validation-icons {
          &:not([multiple]):not([size]),
          &:not([multiple])[size="1"] {
            padding-right: $form-select-feedback-icon-padding-end;
            background-image: escape-svg($form-select-indicator), escape-svg($icon);
            background-position: $form-select-bg-position, $form-select-feedback-icon-position;
            background-size: $form-select-bg-size, $form-select-feedback-icon-size;
          }
        }
  
        &:focus {
          border-color: $color;
          box-shadow: $focus-box-shadow;
        }
      }
    }
  
    .form-control-color {
      @include form-validation-state-selector($state) {
        @if $enable-validation-icons {
          width: add($form-color-width, $input-height-inner);
        }
      }
    }
  
    .form-check-input {
      @include form-validation-state-selector($state) {
        border-color: $color;
  
        &:checked {
          background-color: $color;
        }
  
        &:focus {
          box-shadow: $focus-box-shadow;
        }
  
        ~ .form-check-label {
          color: $color;
        }
      }
    }
    .form-check-inline .form-check-input {
      ~ .#{$state}-feedback {
        margin-left: .5em;
      }
    }
  
    .input-group {
      > .form-control:not(:focus),
      > .form-select:not(:focus),
      > .form-floating:not(:focus-within) {
        @include form-validation-state-selector($state) {
          @if $state == "valid" {
            z-index: 3;
          } @else if $state == "invalid" {
            z-index: 4;
          }
        }
      }
    }
}

